// Package main Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// api.txt
// api_test.txt
// v_api.txt
// v_api_test.txt
// v_data.txt
// v_readme.txt
// v_route.txt
// v_route_test.txt
// v_tables.txt
// v_tables.vue.txt
package data

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4d\x8f\xda\x30\x10\x3d\x27\xbf\x62\x2a\xed\x81\xac\x50\x72\xa7\x04\x89\x42\x2b\xf5\xd0\x15\x5d\xb6\xa7\xaa\xaa\x4c\x32\x40\x54\x27\x71\x9d\x49\x81\x45\xfc\xf7\xca\x76\xbe\x60\x09\xe5\xa3\xed\x72\xc2\x93\x37\x6f\xe6\xbd\xf1\xc8\x9e\x37\xcc\x29\x85\x05\x26\x28\x19\x61\x08\xab\x88\x96\xf0\x09\x89\x0d\x45\x04\x4b\x22\x91\xf5\x3c\x6f\x11\xd1\x32\x9f\xb9\x41\x1a\x7b\xb8\xde\x3c\x3f\x6f\xbc\x18\x89\x31\x11\xd9\x82\x05\x3f\xd8\x02\xa1\xdf\x07\x77\x52\xfc\x1f\x0c\x6c\x5b\x9d\x3f\xc6\x22\x95\xa4\x8e\xf5\xe9\x29\x8a\x11\xe6\x8c\x67\x15\x4c\xb2\x64\x81\x70\x17\x25\x21\xae\xbb\x70\x47\x6c\xc6\x11\x7a\x3e\xb8\x4f\xea\x5f\xa6\x61\x9e\x07\xbe\xf9\xa9\x42\x06\xe3\x8e\x98\x98\x46\xc9\xe2\x81\xc5\x8a\xab\x04\x28\xf0\x48\x22\x23\x04\x4d\x60\xcf\xf3\x24\x00\x13\xd1\x81\x3d\x82\x09\xcf\x65\x41\xd0\x09\x67\x70\x9f\xfd\xe4\xee\xf8\x9d\x03\x1d\x94\x12\x50\xca\x54\x3a\xb0\xb5\xad\xef\x5d\x75\x00\x1f\xc2\x99\xfb\x7e\x8d\x41\xcd\x31\x96\xa9\xd0\xb4\x53\x62\x84\x31\x26\x5a\xaf\x15\xcd\x75\xc2\x1b\x1f\x92\x88\x2b\x06\x4b\x22\xe5\x32\xb1\xad\xdd\x29\xb6\x46\x9b\xfb\x7c\x45\xf6\x4e\xa9\x53\x25\x9b\xda\xaa\x16\xfe\x8b\xb2\x66\x27\x53\x92\x79\x40\x36\x6d\x04\xb6\xcf\x25\xd3\x20\xd8\xda\x35\xc2\xe4\x7d\x88\x90\x87\x7a\xbe\xbb\x7a\x68\x46\x52\xa7\x81\x6d\x50\xdd\xb7\x15\x71\x8a\x01\xb7\x7d\xdf\x77\x40\x62\x96\x73\x6a\xed\xd8\x38\x52\x5b\x94\x51\x4c\x26\xd6\xd3\x36\x4d\x24\x0a\x26\xf1\x70\x6a\x17\x5c\x80\x10\xe7\x28\x41\xf1\xba\x23\x9e\x66\xd8\x71\x6c\xcb\x4c\x41\xc7\x3e\xe7\x28\x37\x8f\xe9\xea\xb0\x82\x8e\xbf\x18\xc2\x23\x92\x8c\xf0\xd7\xd5\xce\x95\xf9\xff\xc4\xbb\x02\xde\xbe\xb6\xdb\x5d\x29\x3d\x9c\x1d\x11\x5e\x36\xd7\x7e\x07\x4b\xc4\x90\x73\xe3\x40\x23\x70\xde\x42\xd4\xa8\x06\x04\xbe\x7e\x3b\x5b\x63\xba\xca\x9a\xf7\x43\xab\x78\x29\x61\xc8\xf9\x05\x57\x64\x9e\x4a\x50\xc4\xee\x03\xae\xa9\xe3\x14\x9f\xb5\x99\xbd\xd3\x6e\x96\xbc\xbe\xce\x6f\x5c\x87\x80\x25\x43\xce\x61\x30\x78\x7b\x58\xb7\x2a\xac\x2a\x5b\xc7\xfd\xf0\x81\x09\x81\x49\x78\xdc\xae\x2e\x98\xe6\x1c\xdd\xbc\x6e\xbc\xba\xd9\xcd\x69\x7d\x11\xe1\x0d\x4b\x6e\xb2\x5f\x67\xc9\x4d\xed\xdb\x96\xfc\x0f\x5b\x6e\x4a\x1c\xdf\xf2\x31\x72\xbc\xde\x38\x93\x7d\x9e\x71\x17\xfa\x62\xa8\x6f\xf5\xa5\x7a\x86\x74\xfc\xe0\x21\xd2\x15\x4e\xd9\x52\xed\x7e\x75\xbc\xe6\x29\x3c\x53\x6a\x73\x8f\xff\x96\xd8\xbd\x35\xe9\xf7\x01\x93\x50\x49\xfd\x1d\x00\x00\xff\xff\x90\xb9\xff\xb7\x9d\x09\x00\x00")

func apiTxtBytes() ([]byte, error) {
	return bindataRead(
		_apiTxt,
		"api.txt",
	)
}

func apiTxt() (*asset, error) {
	bytes, err := apiTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.txt", size: 2461, mode: os.FileMode(420), modTime: time.Unix(1587063307, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _api_testTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5a\x6b\x73\x1b\xb7\xd5\xfe\xcc\xfd\x15\x27\x3b\x51\xb2\x1b\xd3\xcb\xd8\xc9\x9b\x0f\x8c\xc8\x19\x45\xa2\x27\x7e\x1b\xc9\xaa\x48\x27\x9d\xaa\x9a\x0c\xb8\x7b\x48\xa1\x02\x81\x35\x80\x25\xa5\x68\xf4\xdf\x3b\x00\xf6\x46\x71\x79\x95\x3b\x6d\x93\x0f\x11\x89\xcb\xb9\xe1\xc1\x83\x73\x0e\xdd\xe9\x9c\x64\x5a\xc0\x14\x39\x4a\xa2\x31\x81\x05\xd5\xb7\x70\x8e\x9a\x9c\xa4\x14\x6e\xb5\x4e\x55\xb7\xd3\x99\x52\x7d\x9b\x8d\xa3\x58\xcc\x3a\x78\xff\xf0\xc7\x1f\x0f\x9d\x19\x6a\x42\x52\xea\xa5\x24\xbe\x23\x53\x84\xe3\x63\x88\x2e\xf3\xcf\xfd\xbe\xe7\xd1\x59\x2a\xa4\x86\xc0\x6b\xf9\x09\xd1\x64\x4c\x14\x76\xd4\x27\xe6\x7b\x2d\x1f\x79\x2c\x12\xca\xa7\x9d\x7f\x2a\xc1\xcd\xc0\x64\xa6\xcd\x1f\x26\xa6\xe6\x8f\x50\xe6\xff\x12\x27\x0c\x63\x3b\xae\xb4\xa4\x7c\x6a\x47\x35\x2a\x4d\xf9\xd4\xf7\x00\x00\xcc\x44\x2c\xf8\xdc\xf7\x42\xcf\x33\xfa\xdf\x5b\x9d\x23\x3a\x43\x00\x2d\x33\x67\xc8\x9c\x48\x30\xdb\xce\xc6\xf0\x8d\xfa\xc4\xa2\xb3\x9f\xec\x50\x2c\xf8\x84\x4e\x93\x31\xcc\x48\x7a\xed\x34\xdc\x50\xae\x51\x4e\x48\x8c\x8f\x4f\x5e\x2c\xb8\xd2\xf9\xc6\x0b\x32\x43\xe8\x81\xd5\x6e\xf4\xbc\xa3\x0c\x2f\x25\x4e\xe8\x3d\xf4\xfb\xbe\xe7\x75\x3a\xd0\x73\xff\xc1\x2d\xb2\x14\xa5\x32\x63\x44\xa9\x6c\x86\x0a\x48\xae\x8b\x89\x98\xb0\x64\x1c\x19\xaf\x61\x42\x19\x02\x51\x5d\xaf\xd3\x79\x34\xfb\x8d\x3b\x3f\x0b\xa5\xfd\x2e\xf8\x76\xe1\xad\xf9\xd2\x2e\xa6\x2e\x85\xb4\x53\xff\xf7\xfd\x77\x6f\xab\xd1\x8f\x0a\xa5\x19\x4d\xc6\x9c\xcc\xb0\xb6\x9a\x28\xd5\x34\x6e\xfc\x68\x1a\x1f\x0e\x7f\x39\x17\x89\x9b\xa2\x8a\x8c\x19\xfa\x5e\xa7\xf3\xe4\x4d\x32\x1e\x03\x13\x24\x39\xb5\x0e\x04\x21\x3c\x7a\xad\xc9\x4c\x47\x97\x92\x72\xcd\x78\xe0\x43\x6d\xda\x0f\xbd\x96\x71\xab\x0d\x28\x25\x74\x7b\x20\x54\xf4\x21\x45\x1e\xf8\xab\xfe\x9b\xb5\x74\x62\x17\x7e\xd1\x03\x4e\x99\x91\xdc\x62\x62\x1a\x5d\x12\x4e\x63\x23\xfa\x94\x70\x2e\x34\x88\x14\xf9\x72\x00\x6d\xec\x7c\xab\x25\x1a\x48\x29\x64\x10\x86\x5e\xeb\xc9\x6b\x25\x18\x8b\x04\xad\x6a\xa3\x23\xba\xc0\xc5\x99\x1b\x0a\xcc\x96\xd0\x6b\x19\x7d\x3d\xc8\xd7\x45\x6e\x32\xf8\xaa\x80\xc2\xce\x36\x4d\x51\x83\x35\x26\x37\x2c\x93\x44\x53\xc1\x8d\x69\x52\xcc\xd6\xd9\xf7\xe4\xb9\x80\xc6\x12\x89\xc6\xb3\x71\x90\x94\x88\x6c\x43\xe2\x40\xe6\x80\xd8\x06\xb1\xe0\x28\xf3\x6f\x21\x04\xc6\x26\x34\xa2\xec\x09\x28\x65\x5c\x34\xe7\x30\x4c\xcd\x41\x4c\x02\xff\xf4\x6a\x70\x32\x1a\xc0\xd9\xc9\xe8\xe4\xa7\x93\xe1\x00\x8e\x14\x7c\xf8\xed\x62\x70\x05\x47\xca\x2f\x84\xe7\x52\xc3\x95\x23\xf4\xe1\x15\x28\x15\x7a\xad\xdf\xdd\xd1\xf5\x20\x19\x47\x83\x7b\x8c\x03\x3b\x2a\x51\x67\x92\x97\xe6\x2b\xd4\xa3\x3f\x96\xac\xdf\xc5\xc0\xe1\x60\x04\xa3\xf7\xe7\x03\xf8\xfb\x87\x8b\x01\x7c\x1c\x9d\xfa\x2f\xb5\x23\x91\x22\xdd\x14\xc4\x5d\xac\x3a\xbb\xfa\x70\x59\x0f\x5a\x19\xab\x97\x1a\x27\xc5\x62\x70\x4f\x95\x56\x4b\xf6\x7d\xca\x50\x3e\x94\x67\x4c\xe4\x54\x41\x14\x45\x35\xd6\x31\x36\xdb\x6d\x30\x16\x82\x39\x45\x95\x03\x6e\xfb\x4a\x60\x7f\x19\x9c\x8e\x60\xf0\xb7\xf7\xc3\xd1\x10\x82\x23\x15\xfa\xb9\xa2\x66\x1f\x8a\xa9\xd2\x87\xbf\x9a\x81\x2b\xb1\x08\xec\x8c\x33\x2b\x8a\xa2\x30\x1a\xc6\x84\x07\x5f\x39\x7b\x56\x3d\xd4\x86\x26\x1a\x7c\xb4\xe3\xd5\x11\xcc\x09\xa3\x49\x93\x37\x5e\xcb\x4e\x15\xc1\xac\x07\xac\x0d\x85\x57\x6f\xe0\xdd\xd5\x87\x73\x48\xa7\xbf\x5b\xb1\x0a\x7e\xfb\x79\x70\x35\x70\x3a\xb8\x23\xe5\x2f\xdf\xf8\xb9\xd2\x55\x1b\x29\xa7\x7a\x64\x19\x3c\x58\x41\x43\x9d\xd6\xbc\x56\xaa\x3e\xb1\xf7\x7c\x22\x56\x10\x62\x68\xb8\x77\xa4\xc0\x3c\x2c\xe6\x6f\xa6\x50\xda\xef\x44\xa9\x85\x90\x89\xf9\xec\xbf\xf2\x5a\x2d\x5f\x29\x36\x13\x09\xf6\x2c\x8a\x0a\x4a\xb9\x76\xa4\x7e\x53\x1f\xb1\x5c\xbe\x34\x62\x79\x7c\x79\x8d\x61\xf0\xa5\x91\x82\xa3\x6f\x42\xaf\xe5\x5e\xa5\x22\x74\x26\xf2\x8e\x67\x53\xa1\xf4\x54\xa2\x31\xa0\x70\x68\x35\x28\x26\x20\xe7\x84\xf2\x60\x06\xdf\xe4\xcf\x69\x74\x6e\x43\xd2\xe9\x98\xef\xe6\x82\x67\xa9\x03\x48\xb7\xb7\x14\xc3\xad\xfc\x18\x3b\x7e\xac\xf6\x40\x03\x0f\x16\xd8\x2b\x79\xb0\x70\xa7\x7a\x6c\x57\x83\x13\x05\x39\xa4\x76\x36\xe2\x34\x17\xbf\xc9\x84\x82\xcb\x9c\xe6\x9d\x45\xe7\xdb\x9a\x25\x77\x3a\x32\xe3\xd6\x17\xe5\xb5\xf0\x9e\xea\x5f\x09\x33\x81\x9c\x45\x57\x19\x0f\x42\xaf\x8c\xb3\x46\x22\x13\xb1\xe0\xe5\x5d\x74\x84\xb6\x1a\x8d\x9d\xed\x3a\xb3\x12\x9a\xcc\x6a\x09\x15\x0d\xee\xa9\x0e\x72\x83\x42\x03\x07\xfd\x90\x22\xc4\x62\x96\x12\x89\x23\xf3\xd9\xe0\x23\xa8\xd1\x51\x1b\x96\xb8\xc9\xdc\xe2\x1c\x44\x5c\x9c\xba\x7d\x81\x44\x95\x31\xdd\x06\xbc\x4f\x31\xd6\xab\x1b\x96\x52\x86\x89\x61\xa1\x72\x6f\x17\x8e\xe6\x6d\x38\x9a\xc3\x6b\x80\xa3\x51\x1b\x8e\x46\xf0\x0f\xee\xb7\x61\x59\xe4\xf3\xef\x25\xa2\x21\x30\x39\x5e\x58\x3d\x08\x38\x21\x19\xd3\x87\x1b\xb6\x2c\xe0\xc5\xd6\xb9\x09\xe8\xf5\xca\xa9\xc2\x52\x93\x9d\x1c\x6e\x66\x6d\xf7\xa1\x36\x1a\x0c\xe6\x69\x28\xb2\x44\x41\x4c\x38\x8c\x11\x08\x7f\x00\x21\x4d\x0a\x45\x26\x1a\x25\x24\x63\x70\xce\xb4\x41\x09\x90\x48\x12\x63\x9f\x68\x4c\x99\x81\xf0\x04\x98\x10\x77\x60\xc8\xc3\x29\x3c\x27\xa9\x45\x3e\xb9\xc3\xa0\x39\xcd\x36\x0f\x91\xb5\x69\x97\xa5\xf6\x1a\xe4\x75\x41\x64\x00\xfb\x61\x92\x87\x2f\x8c\x86\x76\x7d\x10\x9a\x70\xfb\x86\x11\x2f\x32\xc6\xdc\xa0\x6f\xef\x4b\x4e\x67\x36\x31\xfc\xc8\x67\x44\xaa\x5b\xc2\x82\xeb\x9b\xf1\x83\x2e\x0e\x21\x0a\x96\x37\x16\x52\xc3\x36\x7c\x55\x3a\x14\x7a\xad\x86\xdb\x58\x5d\x47\xf3\xcc\x98\x35\x4f\xb9\xce\x75\x2a\x9d\xdb\x9b\x54\x96\x81\xd9\x43\xe5\x13\x20\x53\xb8\x87\xc3\x39\xa9\xfe\x5b\x3d\xac\x74\x1c\xe4\x92\xe7\xb5\x26\x42\xc2\x5d\x1b\xe6\xc6\x21\x49\xf8\x14\xa1\x42\xcd\xa3\x13\x35\x37\x82\x4a\x1f\xae\xef\x6e\x9c\xc4\xfa\xd5\xf9\x0b\x3e\xb8\x0b\x73\x65\x97\xb9\xcf\x03\x2b\xc8\x7c\xf6\xdb\x46\x47\x5d\x44\x1b\xe6\xc6\x88\xe2\x46\x4f\x08\x53\x58\x18\x55\x0c\x1a\x0e\xf2\xfe\x47\x6c\x74\xf9\xbb\x3d\x8e\x3d\xe8\xa7\xb8\xcd\xff\xaf\x04\x2f\x6b\x3b\x7b\xe4\xe7\xf9\x81\xe7\x97\x70\xe3\x33\x95\x9f\xe8\x53\x71\xe1\xd7\x4b\x2b\x89\x74\x27\x69\xcb\xdc\xb8\xe4\xdc\x3a\x76\x74\x8b\x82\xca\xab\xb0\x1c\xab\x6c\x0b\x37\x30\x7b\xde\x90\x88\x46\x92\xce\x86\x29\x89\x31\x58\x15\x69\x99\x68\xed\xc2\x9a\x9e\xd0\xbe\x0b\x9d\x4e\xaa\xa6\xcc\x9c\x14\x8f\x95\xa1\x5a\xa6\x80\x68\xf8\x01\x12\x3a\xa5\x5a\xe5\x55\x05\x12\xb6\xd7\xc1\x2d\x07\xa7\xb6\xfd\xf0\x87\x63\x4e\x64\x3e\x3a\xd4\x45\x85\xea\x46\xdd\x9a\xfa\xe8\x9e\x74\xfd\x8e\x09\xa2\x7f\xf8\xde\xf1\x75\xa5\xc3\x86\x31\x16\x7c\x1e\xbd\x13\x72\x46\xb4\x5d\xb6\x42\xd9\xf9\xe6\x30\xca\x3f\xb4\xe1\xeb\xc9\xd7\x6d\xf8\xa1\x0d\xdf\xbd\x35\x17\xa4\xb2\xae\x59\xde\x73\x3e\xde\x22\xaf\x46\xb4\xdb\x2c\x9d\x38\x01\xa5\xc5\xf6\xfb\x77\x6f\x0d\x21\xee\x67\x62\x21\xa8\x30\x75\x9d\xa0\xa7\xe7\x39\x88\x15\xd9\xab\x0e\x28\x47\x1c\xd5\xb6\xe5\x07\xfa\x56\x8a\x6c\x7a\x0b\x48\xe2\x5b\x97\x11\x80\x98\x18\x0b\xb2\x58\xdb\x67\x9d\xa4\x29\x7b\x00\x7d\x5b\x66\x8b\x36\x53\xd4\x54\x70\xd0\xa2\xbe\x6d\x4c\x14\x26\x20\xf8\x52\x56\x39\x23\xa9\x83\x2f\x7e\xca\x08\x7b\x67\x16\x6e\x40\x6f\xdb\xee\x35\xa4\x59\x4b\x03\x6a\xe2\x42\x57\xc3\x59\x78\x67\x96\x6b\x73\x84\xfd\x4a\x58\x66\x20\x56\xde\xd6\x79\xd3\x6c\x49\x55\xda\x02\x72\x68\xd6\x64\x16\x9d\x36\x35\x37\x24\x4e\xcd\xd8\xb7\x3f\x02\x85\x63\xc8\xa2\x8b\x6c\xe6\x4c\x0e\x7f\x04\xfa\xea\x95\xd5\x6b\x80\xfd\x45\x90\xdb\x79\x9d\x4b\x8a\xdc\x32\x1a\x46\x26\x67\xbf\x09\x83\x79\x35\xf2\xbe\xf0\x2f\x08\xdb\x90\x35\x8e\x87\xee\x2d\x28\x68\x7c\xa6\x5d\xfe\x3e\x09\x7c\xbb\xba\x0b\x47\x6a\xc3\xa3\xd0\x68\x43\x1b\xf6\x34\xe1\xf9\xbb\xc1\x29\x33\x48\xf1\x3a\x9d\xbc\xaa\x4f\x31\xa6\x13\x1a\x83\x6d\xb7\xba\x47\xee\x4b\x37\xd5\xed\x41\x34\x72\x35\x7a\xbf\x9f\x37\x4f\x8f\x8f\xf3\xd9\xe8\x92\x65\xd2\xb6\x66\xfa\x7d\x3b\x50\x34\x54\x1b\x57\xd8\x86\xaa\xad\x90\x12\xa2\x09\xbc\x06\x2e\x34\x76\x21\x11\x99\x51\x34\x96\x24\xbe\x43\xad\x80\xba\x22\xcb\x2d\xe2\x88\x09\x28\xc3\xb0\x30\x46\xbd\x40\xe4\x20\xf4\x2d\xca\x05\x55\x08\x06\xb0\x16\x61\xa9\x44\x8d\x09\x10\x05\x1a\x67\x29\x33\xd8\x27\x16\xc6\x65\x93\xb8\x32\xe8\x94\xa4\x43\xca\xa7\xb9\x4d\xd0\x83\xeb\xb7\x37\xeb\x66\x1f\x6b\xae\xda\xba\xd7\x98\xf4\x06\xfa\xfd\x76\xd3\xc4\x5b\x23\xef\xc9\x35\xa6\xb3\x34\x21\x1a\x37\x68\x5d\x37\xb5\x46\xa1\x09\xdd\xf3\x3b\xaa\xf2\x7e\xb7\x1d\x5d\x92\x57\x0b\x3a\xf4\xd6\xdc\xb7\x47\xaf\xb6\xc5\x0d\x9f\x93\xf4\x9d\xab\x1b\xfa\xfd\xaa\xe3\x85\x73\x94\x6a\xad\xfc\xa0\xf1\xa8\xe1\x7a\x6d\x4c\xc3\xb2\x80\xda\xb4\xe6\xb1\x7e\x67\x19\xf2\x66\x35\x21\xbc\x86\x37\xe6\x42\xf7\xdd\xc5\x7e\xfd\xba\x46\xdc\xd0\x33\xfc\x86\xbc\x22\xa5\x46\x19\xd7\xf4\xa6\x4e\xad\x8e\x41\xcb\xb6\xbf\x2d\xf7\xbb\x6b\x4f\xab\x58\x57\x6b\xc1\xb8\xf6\x84\xbd\x32\x6b\x63\xa6\xab\x0e\xcd\x68\xb5\xf7\xde\xeb\xed\x20\xc3\x0f\xcb\x4e\xce\x4e\x1a\xd7\x37\x42\x2a\x42\x5a\x6a\xb0\x6c\x94\x67\x3b\x8e\xcf\x7a\x11\xd5\xc3\xf9\xac\x3b\x79\x26\x38\x76\x77\x91\xea\x17\x79\x24\x55\x5a\x95\x39\x64\xbd\x21\x59\xf4\x50\x6a\x04\x53\xdb\xbb\x83\x6f\x35\x61\x4d\x3e\x58\x19\x5f\xe4\xad\xda\x65\x01\x75\x33\x56\xb4\x87\x79\x3d\x8d\x09\x2c\xa4\xe0\x53\x50\x9a\xe8\x4c\x41\x2c\x12\xec\xc2\x54\x68\x93\x92\x2d\x08\xd7\x8e\xd5\x0b\x0f\x5d\x9f\x63\x6b\xe8\x6a\xaa\xfd\xa5\x5f\x1c\x2a\xbc\xad\x03\xe8\x8e\x50\x5b\xb7\xdd\x0f\x8b\x22\xa1\x3a\x8e\x0d\x6c\x7a\xfd\xed\x4d\xb4\xcd\x9e\xbd\x81\xb8\xf6\xee\x1d\x8a\xc1\x4d\xce\x3e\x15\x4d\xbb\x86\x9c\x66\x8b\xe7\xed\x6d\x54\xbc\xc5\x69\x92\xd2\x0a\x45\x19\x77\xe9\x0e\x26\x79\x52\x1e\x35\xc2\xb5\x0e\x84\x2b\xd4\x92\xe2\xfc\x70\x28\x6c\x13\x70\x00\x18\xb6\xdb\xb4\x07\x1c\xb6\x09\x3b\x00\x10\xbb\xb8\xfc\x27\x80\xc4\x09\x63\x07\xbf\x45\x3b\xc8\xf0\xab\x5f\xcf\xb6\x61\xe2\xcd\x9f\x80\x20\x9e\xdd\x81\x9d\x82\x7c\x00\xcc\x37\xc8\x7b\x01\xd2\xb7\x1c\xe3\x93\xfd\x9d\xc3\xa5\x7c\x30\xc6\x98\x64\x26\xcf\x4e\x29\x50\x05\x67\x83\xe1\x69\x1b\xae\xbb\x37\xe6\x8b\x62\x34\x46\x53\x4e\x12\xc6\x80\x48\x49\x1e\x00\x19\xce\x90\xbb\x5f\x47\x6c\xf5\x67\xcb\xb4\xcd\xd9\xe3\x46\xb0\x74\x4d\x66\x66\xb3\xc0\x36\xfc\xfe\xbc\xfd\x56\xf6\x42\x1b\x2e\xe6\x35\xbd\x29\x4a\x50\xfb\x71\xfb\x2d\x6c\x6a\x5a\xbe\xe4\x1e\xba\x7a\xcb\xd4\x58\xe5\x65\xfc\xb8\xb1\x24\xd8\x7a\x0f\x37\x6f\x6f\xe0\xe6\xcd\x25\x48\xb4\xcd\x9c\x3d\x10\xbb\x59\xd4\x01\x60\xdd\xee\xeb\x26\x52\xde\xec\xf8\x7f\x88\x93\x8f\x8f\x01\x79\x62\x0a\xab\x4e\x27\x41\x86\xa6\x44\x65\xcc\x15\xb9\x94\x17\xf7\x24\xff\x95\x46\x0b\x20\x71\x2c\x66\x33\x61\x3c\x81\x89\x90\x48\xa7\x1c\xee\xf0\x41\x35\x16\xe8\x57\x6e\x77\x55\xa7\x57\xa8\x3b\xb3\xba\x0e\x46\xdd\xe6\xed\xb5\x22\x64\x5b\x26\xb0\xcd\x8e\x3d\xe0\xb6\x59\xd4\x01\x70\xdb\xee\xe4\x53\xed\x9f\x87\x7c\xf6\x9c\xa7\xb7\x3f\xcc\x5c\x4d\x71\x25\x16\xae\xa8\xb8\x10\x57\x62\xe1\x2f\x7b\x5a\x09\x57\x9f\x98\x11\x6b\x17\xa9\x67\xbf\x4c\xec\x93\x0c\xb9\x7f\x41\xc8\x45\x6e\x83\x6f\x69\xae\x52\xf8\x59\x12\xb6\x92\x37\x9f\x01\xf8\x25\x19\xcc\x56\x09\x35\x18\xef\xa0\x6d\x6f\xa4\x7e\xde\x87\x7c\x27\x6f\xfe\x6b\xb3\x14\x2b\x9b\x21\x2f\xfa\xb5\xd0\x87\x6f\x3f\x37\xf2\x0f\xcd\x7f\x1a\xf0\x6d\xa0\x58\x32\xf7\xbf\x02\x00\x00\xff\xff\x36\xa9\x4b\xfd\x52\x2b\x00\x00")

func api_testTxtBytes() ([]byte, error) {
	return bindataRead(
		_api_testTxt,
		"api_test.txt",
	)
}

func api_testTxt() (*asset, error) {
	bytes, err := api_testTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api_test.txt", size: 11090, mode: os.FileMode(420), modTime: time.Unix(1590969335, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v_apiTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x5b\x4f\xf3\x38\x10\x7d\x8e\x7f\xc5\x50\x78\x48\x50\x95\xbc\x77\xdb\x48\xdd\x02\x12\xd2\x2e\x62\x29\xfb\x84\x10\x72\x9a\x69\x89\x70\x2e\x38\x0e\xb4\x54\xf9\xef\x2b\xdb\xb9\xb8\x6d\xda\x2d\xf0\x5d\xa4\xbe\x64\x2e\x67\xe6\x1c\xcf\xd8\xf5\xbc\x71\x21\x52\x58\x60\x82\x9c\x0a\x0c\xe1\x3d\x12\xcf\xf0\x37\x0a\x3a\xce\x22\x78\x16\x22\xcb\x07\x9e\xb7\x88\xc4\x73\x11\xb8\xb3\x34\xf6\x70\xb9\xfa\xf8\x58\x79\x31\x0a\x4a\xb3\x88\x64\x74\xf6\x42\x17\x08\x21\x15\x94\x90\xe1\x10\xdc\xeb\x38\x4b\xb9\x00\xdf\x37\xbe\xee\xa3\x18\x61\x4e\x59\x8e\xd2\x4e\x3c\xef\x74\x7a\xfb\xd7\xf5\xe4\xf2\x14\xe6\x45\x32\x83\xf5\xc3\x10\x04\xc6\x19\xa3\x02\xa1\x27\x4d\x3d\x70\xc1\x7f\x2c\xcd\x48\x4c\x42\x22\x53\x27\x1c\x65\xd8\x3d\x0d\x18\xe6\x10\xcd\x81\xe3\x6b\x11\x71\x0c\x89\x58\x65\x08\xda\xad\xbc\x57\x12\x5b\xa2\xd9\xe7\xf9\x2b\x73\x2f\xfe\x74\x00\x39\x4f\xb9\x0e\x14\x75\x48\x0e\xb9\xe0\xc5\x4c\xc0\x9a\x58\x2a\xef\x86\xc6\x08\xd2\x18\x25\x0b\x62\x69\x40\x85\xb5\x85\x4d\x4a\x42\xde\x28\x87\x26\x29\x87\x11\x3c\x3c\xb6\xc0\x6b\x29\x01\xa7\xc9\x02\xe1\x2c\x4a\x42\x5c\xf6\xe1\x4c\x79\x61\x30\x02\xb7\x62\xe0\xfb\xc4\x5a\xf7\x86\xc3\xca\xe5\xde\xb2\x82\xab\x0e\x7c\xbf\xd7\x37\x4b\xb6\x21\x13\x9a\x19\x51\x65\x5f\x96\xc1\x24\x94\x50\x25\x21\xf3\xad\x56\x73\x3b\x0c\xa0\x51\xc0\x46\xce\xb5\x0c\x8e\x24\x3c\x4f\x39\x3c\xf5\x41\xc8\x8e\x74\xa7\x06\x9b\x35\xb1\x2c\x49\x10\x97\x51\x2e\x72\x08\xd2\x94\x11\xcb\xd2\x5f\x7d\x09\x02\x23\x1d\x7e\xa9\x4c\x76\x18\xf4\x41\xb8\x0d\x80\x43\x2c\x2b\x9a\xab\xb8\x93\x11\x24\x11\x53\x80\x16\x47\x51\xf0\x84\x58\x56\xa9\xfd\x27\x15\xbc\x72\x6a\x50\xe1\xb6\xaa\xdb\x61\xe0\x40\x7d\xec\x0a\xdb\x75\x65\x64\x07\x72\x0b\xad\xb0\x4b\x22\x7f\x95\xad\x24\x47\x1e\xc6\xe6\x84\xed\xa8\xb9\xef\x14\x0e\x89\xfc\x54\x8b\x15\x06\xee\xe5\x12\x67\x2d\xc6\x05\x4f\x33\x05\x3b\x15\x54\x60\x8c\x89\x5a\x9c\x0e\x6e\x35\xb3\xf2\x10\x9a\xd1\xe6\x26\x5e\xab\x81\xe7\xc9\x92\x26\xb7\xa6\x85\x5f\xc2\xcc\xec\x64\xaa\xd6\x4e\x6f\xe3\x46\xf1\x69\x94\x2c\xaa\xe2\xed\x6e\xb6\x11\x3a\xef\x2a\x42\x16\x56\x27\xd6\x5c\x12\xc3\x61\x1d\x53\x41\xf8\xbe\xba\x5d\x02\x96\xce\x5e\xa0\xd7\xe1\xae\x6e\x1a\x19\xa4\x56\x68\xf7\xd2\x29\xdb\x5b\x47\x2b\x66\x1b\xad\x18\x9d\x9e\xef\xe3\xe0\x54\xf3\xb3\xcf\xbf\x29\x30\xc7\xbc\x60\x62\xaf\x20\x5a\xf0\xf6\x04\x72\x11\x0b\x6d\x1b\xa8\x53\xb8\xe5\x98\x51\x8e\xdb\x43\xf1\x89\xf9\x0a\x71\x8e\x1c\x24\xae\x3b\x61\x69\x8e\xb6\x43\xaa\xb5\x54\xb6\x7f\x0a\xe4\xab\xbb\xf4\x7d\xbb\x82\xb2\xef\x9c\xf1\x1d\x0a\x1e\xe1\xdb\x97\x95\xab\xf3\x7f\x8a\x76\x55\xf8\x68\x6f\xc2\xba\xac\xa9\x87\x41\x07\xf1\xba\xb9\xfd\x23\x5e\x47\x8c\x19\xd3\x0a\x18\x86\xe3\xf6\xad\xf3\x61\x80\x87\xc7\xa3\x39\xa6\xef\xb9\x39\x1f\x8a\xc5\x2e\x85\x31\x63\x9f\x18\x11\xf9\x6a\x48\x60\xf7\x06\x97\xc2\x76\x2a\xb7\x12\x73\x70\x58\xcd\x1a\x77\xa4\xf2\x8d\x71\x98\xd1\x64\xcc\x18\xf8\xfe\x1f\x87\x1f\x8c\x6e\x3d\x46\x40\xb3\x0c\x93\xb0\x5b\xae\x3e\xe8\xe6\x1c\xfd\x20\xc8\xc6\x9b\xc9\x36\x4f\xeb\xdf\x2c\xfc\xc6\x92\xeb\xec\xdf\xb3\xe4\xba\xf6\xf7\x96\xfc\x7f\xb6\x5c\x97\xe8\xde\xf2\x0b\x64\xf8\x75\xe1\x74\xf6\x71\xc2\x7d\x52\x17\x0d\xfd\x5d\x5d\x9a\x57\x4e\xd9\xb7\xde\x39\x55\xe1\x90\x2c\xcd\xee\x37\x9f\x5f\x79\x69\x8f\xa4\x6a\xee\xf1\x8f\x22\xbb\xb1\x26\xed\x5f\xcd\xff\x02\x00\x00\xff\xff\x42\xef\xda\x8a\x3b\x0c\x00\x00")

func v_apiTxtBytes() ([]byte, error) {
	return bindataRead(
		_v_apiTxt,
		"v_api.txt",
	)
}

func v_apiTxt() (*asset, error) {
	bytes, err := v_apiTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v_api.txt", size: 3131, mode: os.FileMode(420), modTime: time.Unix(1591852498, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v_api_testTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x98\x4d\x6f\xe3\x36\x13\xc7\xcf\xd6\xa7\x98\x15\x9e\x67\x21\xb5\x86\xb4\xbd\x1a\x76\x80\x20\x4e\x81\x1e\xb2\x08\x92\x6c\x2f\x41\xb0\xa0\xa5\x91\xc2\x2e\x45\x2a\xe4\x28\x6f\x45\xbe\x7b\x41\x51\xb1\x1d\xaf\x2d\xc9\x8a\xd1\x6e\x9b\x43\x64\x4b\x9c\xff\x70\x86\x3f\x8e\x86\x8e\xe3\xe3\x8a\x14\xe4\x28\x51\x33\xc2\x14\x1e\x38\xdd\xc2\x19\x12\x3b\x2e\x39\xdc\x12\x95\x66\x12\xc7\x39\xa7\xdb\x6a\x11\x25\xaa\x88\xf1\xf1\xe9\xf9\xf9\x29\x2e\x90\x18\x2b\xb9\x57\xb2\xe4\x1b\xcb\x11\x52\x46\xcc\xf3\x78\x51\x2a\x4d\x10\x78\x23\xdf\xde\x58\x30\x83\xb1\xb9\x13\xbe\x37\xf2\xb3\x82\xec\x45\xa8\xdc\x5e\x94\xb1\xff\x09\x0d\x71\x99\xfb\x5e\xe8\x79\x59\x25\x13\xb8\x42\x43\x67\x8c\xcb\xa0\x80\x9f\x9a\x87\xd1\x59\x08\x7f\x7a\xa3\x38\xb6\xdf\xc1\x20\x55\xa5\x37\x42\xad\x61\x32\x83\xdf\x24\xa7\xf9\x22\xf8\x38\x5f\x8c\xc1\x4f\x94\xcc\x78\x2e\x54\xc2\x44\xba\x88\xfe\x30\x4a\xfa\x63\xf8\x38\x5f\x9c\xd4\xf7\xc7\x40\xba\xc2\xd0\x1b\xf1\x0c\xac\xf5\x87\x19\x48\x2e\xac\xf2\x48\xa8\x3c\x3a\x67\x92\x27\x42\x06\x7e\xc2\xa4\x54\xd4\x28\x83\x3f\xb6\x83\xa3\x53\xad\x95\x0e\xc2\xd0\x1b\xbd\x38\xdf\x33\x38\xd1\xc8\x08\xe7\x8b\xc0\xfa\x7e\x75\x72\xed\xdb\x00\x3e\xb3\x02\xfd\x9b\x28\x30\xa4\xb9\xcc\xc3\xf5\xc7\x5f\x0c\xea\xb5\x47\xbd\xa7\xf3\xea\xad\x6d\x42\x42\x19\x37\x9f\xfe\xaa\xce\xa4\x45\x74\xaf\x04\x67\x4c\x98\x03\x66\xf8\x12\xe9\xea\x79\xbf\x80\x1a\x93\xad\xa2\x71\xac\x2b\x09\x16\x22\xe3\x8d\xf0\x91\xd3\xef\x4c\x58\x86\x8a\xe8\xa2\x92\x41\xb8\x24\x8c\x90\xe9\x54\x3d\xc8\x1f\x27\xaf\x87\x05\x77\xae\x55\xd9\x07\xdb\xde\x1e\x9d\xe0\xdf\x47\xa6\x32\xd1\xe9\x23\xa7\xa0\x59\xc3\xd0\x7b\xf1\xbc\xe9\x14\x34\x93\x39\xc2\xff\x88\x2d\x04\xda\x75\x8d\xae\xec\x27\x03\x47\x47\x5e\x1c\xc3\xcc\xfd\xb9\xf5\x9f\xc0\x74\xda\x8c\x8c\x4e\x58\x79\xc9\x65\x6e\x83\x87\xa3\xa3\xd7\x71\x6b\xe5\xc8\x6d\xbd\x5a\xec\x8d\xd5\xb9\xa8\x74\x63\x15\xd0\xaa\x5a\x5d\xd5\xd5\x2a\x2b\x28\x3a\xd7\x5c\x92\x8d\x69\x36\xeb\xa1\xe1\x87\xcb\xaa\xd6\xc7\xe3\x8e\x5c\x92\x4b\x55\xb6\x51\x38\x5a\xb5\xc0\x87\x9f\x37\xb3\x0c\x28\x0c\xd6\x8a\x6f\x22\x01\x98\x2b\x89\x93\x3e\xaa\x7e\x43\xc0\x23\x37\x64\xea\x55\xb4\xa1\xd5\x26\xa7\xf5\xbd\x9a\x40\x7f\x65\xbe\x66\xd7\x23\xae\x35\xa1\x6d\xf3\xaf\x35\x3e\x38\xe7\x1b\x02\xeb\x53\xf8\xce\x7b\x08\x1a\xa9\xd2\xd2\xbe\x07\xb5\x92\x39\x18\x62\x54\x19\x48\x54\x8a\x13\xc8\x15\xc1\xff\xef\xe1\x81\x49\x7b\xb5\x6c\x36\xd1\x35\x3b\xb4\x2b\x6d\x6b\xae\x5d\x7a\x5e\xbe\xe3\x6c\x17\x98\x3d\x11\xdb\x65\x6e\xdd\x69\x34\x95\xa0\xd5\x52\xa0\xa1\x5d\xc3\xaf\x3f\xdd\x44\x1d\xf3\xd9\x0f\xc0\x9d\xfb\x6d\x28\x7b\x6d\x81\x2e\x0b\xcf\xe9\x5d\xc5\xc4\xaf\x1c\x45\x1a\xbc\x06\xdf\x11\xf5\x18\x4e\x54\x51\x32\xbd\x13\xeb\x8e\xa0\x59\xc9\x57\x04\x55\x12\x1f\x4b\x4c\x6c\x53\xe5\xdc\x47\x5b\x51\x5d\x87\xe0\x02\x49\x73\xbc\x1f\x8e\x41\x97\xc0\x00\x10\x3a\xe7\xd4\x17\x85\x2e\xa1\x01\x30\xf4\x09\xf7\x3f\x80\xc3\xb1\x10\x83\xdf\x3d\x3d\x34\x6c\x96\xbe\xf6\xe3\xe1\x97\x7f\x79\x61\xd8\x60\xbf\x4f\x82\xf7\xc5\xbb\x45\xeb\x1d\x84\x77\x2c\x9f\x6b\x70\xf1\x1e\xb5\x41\xe0\x19\x58\xf2\xb8\x81\xf9\xe9\xe5\xc9\x18\xae\x27\x37\xf6\x8b\x11\x3c\x41\x50\x19\x30\x21\x80\x69\xcd\x9e\x00\x05\x16\x28\x6d\x47\x1c\xc7\x8e\x4e\x97\x95\x5a\x67\x67\x46\x5a\x09\x99\xdc\xd8\x4e\x66\xa9\xd5\x36\xd6\x1b\x65\x4a\x03\x1f\xc3\x57\x3b\xd2\x35\x70\x8d\xa5\xcd\xc7\x8e\x5d\x7b\xcd\x6f\xc6\xcd\xb0\xfa\x63\xf7\x16\xdd\xb2\x7a\xef\xda\xa4\x36\xdb\xf5\x46\x5d\xed\xd4\x2f\x65\xfa\x9e\xb7\x77\xbb\xf9\x96\xa2\xdd\x6e\x10\x75\x4c\xa7\x2f\xd2\xed\x32\x03\x68\xee\x8e\xb3\xad\x5a\xb7\x5b\xff\x43\xc5\x7a\x3a\x05\x94\xa9\x3b\x66\xa4\x28\x90\xb0\xde\x5f\x29\x23\x06\x5c\xc2\xeb\x9e\x54\x3a\x45\x0d\xa4\x80\x25\x89\x2a\x0a\x65\x23\x81\x4c\x69\xe4\xb9\x84\x6f\xf8\x64\xb6\x9e\x61\x9a\x9d\xb8\x3a\xca\xac\x88\x9b\xd7\xbe\x06\x13\xd7\x6e\xbe\x76\x1a\xe9\x6a\x0f\x3a\xe6\xd1\x17\xb5\x76\x99\x01\xa8\x75\x07\xf8\xb2\x7c\xeb\x1d\xb8\x09\x9a\xed\x8f\x97\x3b\x5c\x5c\xa8\x07\x77\xba\xf8\xac\x2e\xd4\x83\xff\x36\xca\x95\xb8\xb9\x13\x56\xb6\x1e\xe4\x8e\x37\xc3\xba\x23\xf7\x5b\x9f\x54\xcd\x1c\xfc\xba\xb4\xad\x1c\x1e\xa4\x83\x5b\xd6\xca\x0d\x70\xdf\xd3\xd2\x74\x2a\xac\xe1\xdb\xed\x6d\x3f\x42\x0f\xfb\x76\xef\x15\xc9\x0f\xd9\xb6\xd4\xda\x02\x65\x53\x9c\x43\x38\x82\x4f\x87\x26\x7e\x68\x43\xb4\x85\x6b\x8b\xe0\xaa\x52\xff\x15\x00\x00\xff\xff\x75\x10\x5e\x03\xf5\x16\x00\x00")

func v_api_testTxtBytes() ([]byte, error) {
	return bindataRead(
		_v_api_testTxt,
		"v_api_test.txt",
	)
}

func v_api_testTxt() (*asset, error) {
	bytes, err := v_api_testTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v_api_test.txt", size: 5877, mode: os.FileMode(420), modTime: time.Unix(1682205442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v_dataTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xc1\x6a\xdb\x40\x10\x3d\x7b\xbf\xe2\xe1\xf4\x10\x43\x6c\x37\x39\x26\xd2\x5e\xdc\x16\x02\x69\x49\x6b\xf7\x24\x7c\x18\x4b\x13\x77\xb1\xb4\x5a\x76\x47\x09\x45\xe8\xdf\xcb\x2a\x2a\x51\x8b\x95\xdb\x30\xef\xed\xbc\x79\xfb\xc6\x51\x7e\xa2\x23\xa3\x20\x21\xa5\x92\x04\xab\xfb\xca\xd5\x5e\x76\xa6\x62\x88\x6f\x58\xeb\x51\x77\xfb\xfd\x01\x5a\xf7\x3c\x4f\xf6\xc8\xf8\x20\x74\x28\x19\xb7\x29\x56\xbb\x58\x85\x08\xe7\xb5\x0d\x82\x24\x19\xd0\xd5\x86\xdc\x63\xd9\xf8\x6f\x54\x31\xb4\xee\x79\x7d\x9d\x62\xfe\x46\x1a\x31\xe6\x4a\xad\xd7\xc2\x41\xfa\xad\xb0\x84\xad\x85\x6f\x51\xd4\x4d\xd4\x3a\x78\xca\x4f\x2c\x01\xc6\xe2\x8d\x64\x99\x0b\x04\x47\x39\xe3\xc0\xf2\xc2\x6c\x51\xcb\x2f\xf6\x2f\x26\x30\xc8\x33\x8c\x15\xf6\xce\xb3\x70\x01\x0a\x10\xae\x5c\x49\xc2\xa0\x5c\x4c\x6d\xd5\x33\x79\xec\x38\xc8\x3f\x5b\x6f\x8d\x3d\x0e\x3b\x21\x45\x76\xb3\x9f\x42\x5b\xb4\x23\xbf\x71\xce\xa7\xb8\xd4\x35\xb4\xee\xae\xce\x42\x37\x11\x42\xa7\x7a\xe1\x9f\xae\x20\xe1\x77\xa4\x27\x75\xa7\x44\xe3\x0f\xe6\x75\xe5\xa2\xf3\xa7\xc6\xf6\x1e\x43\xaf\xb5\x79\xed\x4e\xa5\x83\x14\x15\xb9\x2c\x88\x37\xf6\xb8\x1f\xc8\xbb\xdf\x8e\x5b\x35\x7a\xf2\xda\xfe\x4a\xee\x8b\xe1\xb2\xe8\x43\x5f\xaf\x2f\xb6\x8f\x0f\xf7\x9b\xcf\x17\xc8\xff\x4a\xfc\x17\xad\xd6\x68\xb3\x04\x87\xb2\xce\x4f\x98\x4f\xb3\xe6\x58\x41\xef\xbb\xc8\x65\x5b\xc4\x72\x3c\x9d\x6d\xa1\x3a\xa5\xa2\x2b\xfc\xe0\x67\xf6\x61\xd2\xcc\xe5\xd9\xf3\x42\x36\x99\xe3\x02\x97\x9e\x43\x53\xca\xbb\x9c\x56\xa9\xd9\x53\xed\x61\xe2\xdd\x97\x6c\xcf\xcb\x2c\xb0\xc4\xf5\x1d\x0c\x74\x8a\x8f\x77\x30\xcb\x25\x5a\x35\x9b\x0d\xf3\x53\x90\x73\x6c\x8b\x41\xef\x0a\x67\x67\x64\x66\xbf\x50\xb3\x4e\xcd\x3c\x4b\xe3\xad\xea\x62\x08\xfd\x9f\xe8\x3f\x01\x00\x00\xff\xff\x6f\x71\x6e\xb7\xb9\x03\x00\x00")

func v_dataTxtBytes() ([]byte, error) {
	return bindataRead(
		_v_dataTxt,
		"v_data.txt",
	)
}

func v_dataTxt() (*asset, error) {
	bytes, err := v_dataTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v_data.txt", size: 953, mode: os.FileMode(420), modTime: time.Unix(1591852510, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v_readmeTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\x51\x6b\xf2\x30\x14\x7d\xcf\xaf\xb8\xa0\x7c\x4f\xb6\x79\x97\x28\x88\x5f\x75\x83\x31\xc3\xec\xde\x8d\xcd\xa5\x8b\xd4\xb4\x4b\xd2\xa1\x8e\xfd\xf7\x91\xd8\x55\xb1\xac\x1b\xec\xa5\x34\xe7\x9e\x73\xee\xc9\x69\x07\xc0\x18\xc4\xdc\x94\xbb\x47\xb1\x47\x98\x4e\x09\x99\x1b\x14\x0e\x09\xd9\x6c\x36\x24\x2f\x21\x47\x07\xb9\x72\x2f\xf5\x36\xce\xca\x3d\xc5\xc3\xf1\x74\x3a\xd2\x3d\x3a\x51\x99\x72\xd7\xcf\x10\x95\xf2\x04\xa5\xad\x13\x45\x01\xc3\xe5\x8a\xcf\xd2\x3b\x6a\x4d\x46\xfb\x2d\x7f\xaf\xf0\x2b\xbe\x94\x10\xf9\xe7\xe4\xe6\x46\x10\xd9\xd7\x22\x80\x8b\x16\x71\xc7\x0a\x27\x6f\x35\x92\x4c\x76\x0a\x08\x37\xd2\x68\x7c\x09\xbe\x03\x92\xa2\x75\x23\xf8\x07\x4f\xb5\x1e\x9f\x6b\xc9\x42\x45\xb5\x45\x03\x11\x87\xa8\xe3\x01\xac\x12\xd6\x8e\x3b\xf0\xb4\x51\xca\x6d\x67\x6b\x26\x41\x0a\x27\xfc\x76\x87\xd6\xf9\x73\x1c\xb7\xa7\x4b\x25\xe4\x56\x18\x22\x92\x01\xcc\xf8\xfd\x39\x1c\x63\x60\x84\xce\x11\x86\x4a\x4b\x3c\x8c\x60\xe8\xc4\xb6\x40\x18\x4f\x20\x4e\xfd\x9b\xf5\xb2\xff\xc9\x43\x92\x26\x40\x45\xa5\x28\x63\x0d\x27\x5e\x2b\x9d\x37\xc6\xf4\x1c\x35\xe0\x84\xaf\xd6\x69\x0f\x97\x2c\x93\xbf\x8c\xf9\x73\xef\xf8\xc7\xa8\xdf\x30\x78\x51\x9b\xf6\xaf\xf6\x5f\x1c\x2e\xb3\xb9\xa8\xae\x0c\xc0\x3a\x53\x67\x0e\xde\xc9\x95\x7f\x80\x16\x0a\x0b\x19\x0a\xfb\x20\x7e\x88\x5a\x36\xa5\x7f\x06\x00\x00\xff\xff\xce\x99\xf9\x41\x3a\x03\x00\x00")

func v_readmeTxtBytes() ([]byte, error) {
	return bindataRead(
		_v_readmeTxt,
		"v_readme.txt",
	)
}

func v_readmeTxt() (*asset, error) {
	bytes, err := v_readmeTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v_readme.txt", size: 826, mode: os.FileMode(420), modTime: time.Unix(1682232814, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v_routeTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5f\x6f\xdb\x36\x10\x7f\x96\x3e\xc5\x8d\x2d\x06\xa9\x10\xa4\xf7\xcc\x31\x90\xda\x4e\x9b\xad\x71\x8c\x38\x41\x1f\x8a\x62\xa0\xc5\xb3\xcd\x95\x22\x15\x92\x8a\x53\x04\xfe\xee\x03\x29\xbb\x71\x63\xd9\x73\x3d\x17\x69\x80\xe4\x25\x12\x79\x7f\x78\x77\xbf\xdf\x1d\xe5\x92\xe6\x5f\xe8\x04\xa1\xa0\x5c\x86\x21\x2f\x4a\xa5\x2d\x44\x61\x40\x18\xb5\x74\x44\x0d\x66\xe6\x46\x90\x30\x20\x28\x73\xc5\xb8\x9c\x64\xff\x18\x25\xdd\xc2\x84\xdb\x69\x35\x4a\x73\x55\x64\x13\xa5\xb9\x10\x34\x2b\xaa\x3b\xb7\x23\xd1\x66\x53\x6b\x4b\xf7\xdc\x6a\x41\xda\xa5\x96\x0e\xa8\x9d\x42\xbb\x4d\xc2\x38\x0c\xb3\xec\xd5\x70\xf0\xe1\xac\xd3\x7b\x05\xe3\x4a\xe6\x70\xff\xa9\x05\x16\x8b\x52\x50\x8b\x40\xdc\x12\x81\x14\xda\x9f\xe7\xab\x92\x28\x59\x18\x7a\xf1\x13\xc6\x4e\x84\x38\xa7\x5c\x5e\xaa\xca\xa2\x89\x34\xbc\x29\xaa\xbb\xd4\xbf\xe9\x18\xee\xc3\x20\xcb\x80\xe1\x98\x4b\x64\xc0\x25\x68\xb7\xf1\xb7\x8b\x30\x9d\xa8\x30\xd0\xe9\x7b\x2a\x99\xc0\xd3\x4a\xe6\x11\xc9\x48\x02\xef\x55\x81\xf5\x9a\x8e\xd3\x73\xb4\x53\xc5\x4c\x44\xde\xf5\xae\x48\xbc\x26\x6e\xe9\x48\xa0\x21\x09\x5c\xf9\x87\x4d\x6a\x61\xab\x05\x9a\xca\x09\xc2\x6b\x2e\x19\xde\x25\xf0\xda\x6b\xc2\xd1\x31\xa4\xb5\x2a\xb4\xdb\x00\x00\x6b\x1e\x68\xc9\xb3\x56\x6b\x21\x9f\x0e\xb9\x9c\xf4\x69\x81\xd0\x6e\x67\xb9\x46\x6a\xd1\xaf\x93\x04\x1e\x64\x3a\xb4\x5c\x11\xeb\x78\x29\xef\x63\xfd\x74\xdd\xde\x87\xde\x55\xaf\x21\xae\x8d\x5e\xb7\x78\x1a\x28\x63\xd7\x5d\x0c\x2e\x86\x4d\x89\xdb\xc7\xc1\x3b\x6c\xb0\xdf\x5c\x97\xef\xcd\x0f\x44\xa5\x37\x98\x5f\xd9\xda\xdb\xfc\x8e\xe9\xa9\x9a\xb2\x73\x7d\x28\xf3\x5d\x14\x68\xf7\x2f\xf1\x6e\x29\xfa\x4f\x27\xad\x96\xa3\x26\xb4\xdb\x8e\x75\xdf\xd8\x4a\x19\xa3\x42\x38\xca\x79\xf2\x99\x47\x1c\x7f\xbc\xbd\xe4\x7b\xf0\x98\xf0\x41\x96\x69\xa5\xac\x0b\xc5\x75\x90\x81\xc6\x31\xbf\x8b\x48\x66\x2c\xb5\x3c\xcf\x48\xbc\x88\x50\x47\xae\xe1\xa4\x43\xab\x79\xb9\x26\x94\x80\xdf\x3c\xe5\x02\x87\xa8\x6f\x97\xc2\x5d\xae\x23\x52\x56\x23\xc1\x73\x12\xc7\x71\x1c\xce\x77\x64\xad\xeb\x60\x70\x5c\xff\x6d\xac\xce\x52\xc0\x0b\x3f\x09\xc3\x7d\xb3\xdc\xdd\x44\x34\xd3\xdc\xa2\xae\x73\x75\x89\xa6\x54\xd2\xe0\x47\xbf\x96\x80\xc6\x9b\x0a\x8d\x85\x37\x8b\x5d\xff\xe6\x5b\x2d\x6a\xed\xb2\xe3\xc6\x45\xba\x62\x74\x13\x9e\x22\x2f\xd8\x1d\xc5\x61\xc0\xc7\xe0\x94\x7f\x3b\x06\xc9\x85\x33\x15\x68\xef\x95\x7d\xe4\x76\x7a\x8e\xc6\xd0\x09\x2e\x0e\xb5\xa8\xe0\xd0\x52\x5b\x99\x33\x69\x51\x4b\x2a\xea\x5a\xf6\xb4\x56\x3a\x71\x96\x52\xff\x18\xc5\xb1\xb7\x64\x2b\x2d\xc3\x60\x1e\xae\x1a\xfd\x73\x78\xd1\x6f\xb2\x78\xf1\x57\x02\x05\x2d\x3f\x19\xab\xb9\x9c\x7c\xae\xff\xdd\x13\x8d\xa6\x12\x96\x1c\x01\x31\x55\x9e\xa3\x31\x64\xee\x41\xf2\x03\x05\xdd\xb7\x79\x6e\xad\xdd\x8a\xe6\x9e\x45\xbb\xa5\x1a\x1a\xcf\x5b\xd7\x71\x93\xe3\x30\x60\x98\x2b\x86\xbe\xe2\xee\x1e\x90\xf6\x71\xd6\xad\x97\xa2\x85\xb7\xf4\xad\x62\x5f\x1f\xaa\xeb\xa0\x51\x0b\xa4\xb5\x60\xf4\x7b\xa3\xe3\xf8\x8f\xfd\xc0\xf0\x96\xb2\x45\x60\x09\x90\x33\x79\x4b\x05\x67\xdf\x02\x2f\xe9\x57\xa1\x28\x23\x8f\x10\xc1\x70\x8c\x1a\x56\xcf\x9b\x76\x84\x32\x18\xc5\xfe\xe6\xd0\x78\xbe\xf4\xba\x64\xd4\x22\x3b\xb1\x70\x0c\x96\x17\x98\xf6\xd5\x2c\x8a\xd3\xeb\xab\x4e\x14\x43\x96\x8d\x34\xd2\x2f\x06\x2c\x1a\x6b\x96\x98\x33\x98\x2c\x73\xd0\x6c\xb3\xe6\xcb\xa6\x6c\xff\xb2\x54\x59\x46\x77\x40\x32\x6c\x99\xc4\x5b\xa9\xf0\xa0\xf7\xc2\x84\x03\x33\x61\x47\x0c\x5f\xa2\xd5\x1c\x6f\xf7\x43\xb1\x99\x71\x9b\x4f\xfd\xaa\x7b\xcd\xa9\x41\x30\x37\xc2\xc1\xb3\xaf\x2e\xd5\xcc\x1c\x85\xc1\xae\xf1\xf7\x95\x3d\x55\x95\x64\x09\x90\x8d\x33\x59\x2a\x0b\x63\x27\xe4\x13\xc1\x70\x4c\x2b\x61\x7f\xc0\xc7\x2e\x7c\x9a\xff\x7c\x4e\xfd\xef\xdb\xed\x3a\xa7\x1a\xf5\xf6\xe4\xd4\x1a\x72\x3c\x04\x96\x40\x39\x11\xe2\xd9\x5d\x0e\x7e\x42\xc7\xdb\xf2\x71\xb0\x7d\xf8\x57\x2f\x1d\xef\x69\x3b\x5e\x7d\x13\x78\x99\xda\x3b\x7c\x1c\x6e\x45\xf2\x77\xda\x2f\x60\x3e\x30\x98\xb7\x42\xb8\x4e\xfd\xb3\x83\xf0\x01\xbf\xd1\x0e\xf4\xeb\xc7\xd6\x41\x7a\x08\x80\xaf\x4e\xd0\xda\xde\x73\x9c\x9f\xbb\x17\xee\xe1\xe7\xa4\x7f\x03\x00\x00\xff\xff\x99\x30\xfe\xd4\x9a\x16\x00\x00")

func v_routeTxtBytes() ([]byte, error) {
	return bindataRead(
		_v_routeTxt,
		"v_route.txt",
	)
}

func v_routeTxt() (*asset, error) {
	bytes, err := v_routeTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v_route.txt", size: 5786, mode: os.FileMode(420), modTime: time.Unix(1682224352, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v_route_testTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5b\x6f\xdb\xb8\x12\x7e\xb6\x7e\xc5\x54\xa7\xa7\x47\x3e\xc7\x96\x7a\x5e\xbd\x4e\x80\x6e\xec\xa4\x8b\xb6\xa9\x91\x38\x7d\x09\x82\x05\x2d\x8d\x65\xb6\x14\xa9\x90\x54\x2e\xbb\xe8\x7f\x5f\x90\xa2\x6c\xe5\xe2\x58\xa9\xd3\xc4\x0d\x92\x87\x58\x96\xc9\x6f\x86\x73\xf9\x66\x48\x46\xd1\x4c\xeb\x5c\xf5\xa2\x08\x19\xd5\x33\x49\x64\x98\x52\x3d\x2b\x26\x21\x15\x11\x91\x9a\xc6\x0c\x23\x8d\x4a\x53\x9e\x76\xcd\xd0\xee\x8c\xf0\x84\xa1\x54\xdd\x54\x44\xde\x62\xba\x9b\x15\x8b\x2c\xfa\x86\xec\x8c\x72\x15\xed\x89\x77\x39\x1d\x17\x5a\x48\x4a\x58\x6d\xa8\xc2\x8c\xe4\x33\x21\x31\xa6\x76\x7c\x2c\xb2\xac\xe0\x54\x5f\x46\xda\x0d\x56\xd1\xa4\xa0\x2c\x31\x32\x09\x4f\xba\x95\x7c\xd2\x95\xa8\x74\x97\xe4\xb4\x4b\x79\x37\x15\xdd\x73\xaa\x67\xdd\x54\x48\xca\x18\xe9\x66\xc5\x85\x1d\x9d\x0b\xa5\x53\x89\xea\x94\x79\x5e\x4e\xe2\x6f\x24\x45\xc8\x08\xe5\x9e\x47\xb3\x5c\x48\x0d\x81\xd7\xf2\x91\xc7\xc2\xe0\x47\x5f\x95\xe0\xbe\xd7\xf2\xa7\x99\x36\x1f\x54\x44\x54\x14\x9a\x32\xf3\x85\x89\xd4\x7c\x70\xd4\x56\xf7\xfa\xb3\xfd\x67\xf4\x32\x2f\x85\x32\xff\x95\x96\x94\xa7\xf6\xd1\x29\xec\x7b\x5e\xcb\xef\xf7\x21\x1c\x10\x4d\x46\x44\xcf\x60\x7b\xdb\xf7\xda\x9e\x37\x2d\x78\x0c\x63\x54\xfa\x13\xa1\x3c\xc8\xe0\xbf\x6e\x42\xf8\xa9\x0d\x7f\x7b\xad\xc8\x5a\x1c\x14\xea\x22\xf7\x5a\x28\x25\xf4\xb6\x20\x21\x9a\x84\x7f\x70\xaa\x07\x93\xe0\x8d\xfd\x32\x98\x74\xc0\x37\x4f\x51\x2c\xf8\x94\xa6\x4c\xc4\x84\x25\x93\xd0\x2e\xa9\x03\x6f\x02\x37\x6a\xc7\xfe\xda\xee\x80\x96\x05\xb6\xbd\x16\x9d\x82\xc1\x7c\xb5\x05\x9c\x32\x23\xaf\xc5\x44\x1a\x8e\x08\xa7\x31\xe3\x81\x1f\x13\xce\x85\x86\x52\x14\xf8\x1d\x33\x38\x1c\x4a\x29\x64\xd0\x6e\x7b\xad\xef\xa5\x46\x4e\xa1\x1d\x89\x44\xe3\x60\x12\xcc\x35\xba\x22\xf4\xd8\x37\xab\xdc\x27\x19\xfa\x27\x61\x50\x5a\xa8\x7d\x63\xcc\x91\x42\x59\xfb\xbd\xb1\x8a\x95\xf0\x95\x4a\x32\xa1\x6a\x3a\x36\xc7\x2f\xe7\xad\x82\x5f\xcf\x29\x53\xc2\xd4\x43\x7b\xe5\x10\xf5\xf8\xaf\x1f\x58\xb0\x9b\x77\x2b\x7c\x14\xc9\x82\x83\x09\x4c\xe5\xb5\xf0\x82\xea\x2f\x84\x99\xb8\xcc\xc2\x83\x82\x07\xed\x79\xd4\x6a\x24\x32\x11\xe7\xfc\xd7\xf1\xc0\x4f\x48\x8b\x81\x14\xf9\xfd\x92\xa2\xb1\x02\x25\xf4\x53\x84\xbc\x50\xe1\xf0\x82\xea\xc0\x39\xbf\xed\x7d\xf7\xea\x05\x40\x24\x22\x0e\x85\x4c\xeb\xa5\xc0\x71\x73\x94\x15\x17\xff\x3a\x44\x7d\x74\xf0\xf1\x0b\x91\xca\x8b\xa2\xac\x28\x09\x0e\xdc\x2b\x30\x54\x0e\x7b\xe5\x70\xcf\xeb\xf7\x41\x12\x9e\x22\xbc\xa6\x3c\xc1\x8b\x0e\xbc\xd6\x64\xc2\xd0\xc4\x5b\x38\x36\x4f\x0a\xb6\xb7\x8d\x74\xd8\x2a\xff\xa0\xdf\x77\x63\xc2\x1d\x92\x1f\x52\x9e\x1a\xfb\xc2\xf6\x76\x35\xa0\x46\xba\x25\x6d\x58\x98\x2b\xb3\x46\xac\x90\x6e\xd6\xfb\xb2\xc8\x05\x7a\x41\xcd\x63\x4b\xcd\xd3\x4c\x87\x23\x49\xb9\x36\x36\xdb\xda\xba\x06\x67\xa6\xa1\xf4\xdb\x5e\x4b\xe2\xa9\xb5\xa0\xd1\xd8\x58\x28\xdc\xc7\xf3\x03\x3c\x2d\x50\xe9\xc0\x1f\x0c\x3f\x0e\xc7\x43\xbf\x03\x7e\x44\x72\x1a\x2d\x94\xa8\xe9\x1d\xc5\x16\xd6\xbe\xf7\x3b\xc6\x67\xb7\xfa\x50\x87\xbb\x44\x13\x16\xa0\x94\xa5\x93\x16\x22\x8d\xe2\xa5\xd8\x58\xc8\x04\xa5\xc9\x51\x57\xbc\xe7\x5a\xb9\x75\xee\x16\x3c\x0e\x96\x59\xf0\xda\xfa\x18\xca\x05\x50\x78\x88\xf2\x0c\xdf\x8f\xc7\xa3\x40\xca\x0e\x48\x3c\x2d\xb5\x54\x9a\xe8\x42\x19\x31\x52\x86\x3b\x22\xc1\xdf\xaa\x57\xaf\x9c\xe4\x43\xfb\xf5\xf3\x07\xb7\x0a\x1b\x68\xd3\xc0\xaf\x14\x94\xa8\x0b\xc9\x31\x81\x73\x29\x78\x5a\x4d\x8e\x45\x82\x3d\x48\x85\x86\x7f\x9f\xc1\x39\xe1\xe6\xd3\xef\x78\xad\x56\xab\x1c\xd0\xb9\x8a\x6d\x2c\x02\xc8\x14\x5a\x21\x57\x5c\x07\xf0\xf9\x43\x0f\x4a\x47\x80\xe0\xd0\xd0\x11\x2e\xcf\x2e\xa8\xd2\x6a\xee\x5f\x9b\x63\xd6\x3e\x43\xfb\xc3\x22\xed\xfd\x05\xa2\x43\xf3\x97\x78\xb1\x5a\xbf\x4b\xc3\x1a\x1a\xf8\xf0\xbf\x9b\xb9\x48\xa7\xf0\xaa\x54\xe3\x1a\x40\x5d\x8f\x1b\xd2\xdb\xf7\xb2\x2b\x54\xeb\x74\x04\xb9\xdc\x96\x03\xc1\xb1\x57\x57\xba\x34\xd4\xf7\x5a\xd2\x2d\x8b\xae\x91\x50\xfa\x3e\xd9\xb6\x0a\xa7\x4c\xbf\xaf\x0b\xef\x18\xda\x0f\x3f\x11\xa9\x66\x84\x95\x9e\xb9\x0b\xe6\xf8\xed\x89\xcd\x5e\x92\x94\x59\xe2\x9a\xba\x32\x8f\xcc\x4b\xc7\xd7\xc1\x57\xd5\x5e\x95\xe6\xa3\xcf\x87\xe3\xbb\x93\xdc\x37\x29\x63\x50\x9f\x2a\xb7\x6b\xd6\x7f\x36\x49\x6d\xcc\x7e\x77\x4a\xbb\x34\x9e\x88\xe4\x72\xee\xbd\xb2\xeb\x0f\x8d\x93\xdf\x31\x16\x48\x19\xfe\x2e\x92\xcb\x66\xd9\x7a\x7d\x6e\x19\x00\x25\x40\xef\xf6\xfc\x3d\x23\xc6\x1c\x2a\x17\x5c\x61\x49\x20\xcb\x5c\x54\x95\x75\x1b\xc7\x47\x3c\x73\x91\x7c\x7c\x32\xb9\xd4\x58\x45\xa3\x59\x4a\xbb\xdd\x81\x37\x15\x66\x33\xc5\xe7\x70\x0c\x0c\xc2\x12\x5d\x6b\x6d\xc5\xf0\xb4\x20\x6c\x97\x22\x4b\x82\x4a\x92\x6b\x6e\x56\x24\x95\x1b\xb5\x23\xb2\x9c\xc8\xa5\x65\x77\x85\xd6\x24\xa7\x8b\x18\x2a\x38\x5e\xe4\x18\x6b\x4c\x8c\x21\x0b\xa6\xc3\x5b\xb5\x6f\xc2\x41\x7b\xf8\x20\x14\xe4\x60\x36\x88\x81\xf6\x86\x9b\x4e\x40\x0b\xd3\x3f\x1b\xfe\xd9\x1b\xbe\xd0\xcf\x0b\xfd\xac\xa2\x9f\x9a\xd8\x75\xe8\xe7\x26\x4c\x49\x3f\x51\x44\x92\x04\x08\x17\x7a\x86\x12\xa8\xc6\x6c\x1d\x4a\xfa\xff\x4b\x53\xb4\xf9\xa4\x54\x33\x7c\xe3\x52\x50\x0b\x9f\xe8\x9e\xbb\xcc\xd5\x36\x5f\x65\xf2\x5b\x53\xe0\x57\xb2\xf8\x0f\x94\x81\xda\x9a\x37\xad\x0c\x1c\x9f\x6c\x78\x21\x88\x22\x89\x67\x28\x15\x02\x9d\x82\x21\x63\xaa\x60\x30\x3c\xdc\xe9\xc0\x71\xef\xc4\x7c\x51\x8c\xc6\x08\x62\x0a\x06\x88\x48\x49\x2e\x01\x19\x66\xc8\xb5\x32\xb3\x4b\xc2\x9e\xef\xd8\x0f\x4a\xb0\x65\x21\xd9\x80\x16\x7b\x86\x16\xaf\xa1\xde\x35\xc1\x6b\x4d\x85\x04\xda\x81\x3f\x6d\xf4\xda\x03\x2e\x37\xdd\x98\xe5\xee\x42\x77\x4c\x4f\x3a\x6e\xb4\x7d\x6c\x58\xd0\x6e\x31\xff\x5a\x25\xcd\x38\xa2\xe1\xce\xbe\x78\x90\xb2\xe6\x60\x1a\x74\xd5\x47\x79\x42\x34\x2e\x53\xe7\xe1\x2a\xd8\xd1\xc6\x17\xb0\xe2\xd9\xb1\xe9\xe8\xe8\xa5\xa9\x7e\xf4\xa6\xfa\xee\x84\x7a\xca\x9e\xba\xdf\x07\xe4\x89\xb1\xa4\xbd\x02\x80\x04\x19\x6a\xb4\xbc\x6f\x94\x02\xca\xa1\xaa\x15\x36\x93\x40\x0b\x20\x71\x2c\xb2\x4c\x98\x25\xc1\x54\x48\xa4\x29\x87\x6f\x78\xa9\x60\x6b\xab\x76\xdf\xb0\xb8\x67\x70\xf5\xa1\x76\xdd\xb0\x92\xf2\x06\x56\x8d\x87\x38\x4b\x58\x20\x59\xe2\xf3\x00\x00\x36\xe2\x48\xa1\xc9\xdd\xc5\x93\x13\xe0\x15\x3f\x3c\x1b\x0e\x6c\x72\x5b\xe1\x57\xad\x12\x72\x55\x48\x04\xaa\xff\xa3\x20\x15\x1c\xaf\x44\xd0\x5a\x01\xd4\x3c\x7e\x1e\xe7\x44\x6a\xfd\x8d\xc8\x4f\x3e\x8f\xda\x17\x7a\x57\x14\x3c\xf9\x79\xc1\x53\x49\x68\x70\x49\x63\xb6\x25\xf6\xae\x95\x0b\x47\xb2\x2b\xee\x6a\x6a\x5c\xbe\x26\xbd\x2d\x43\xfa\xf1\xfb\xd2\xfa\x6e\xea\xf1\xef\x48\x97\xad\xe7\xf9\x13\xce\xcd\x5d\xec\xcb\xd1\xc3\x63\x1f\xf6\x6c\x4c\xa7\xbb\xf1\xe7\x06\x74\x0a\x0c\xf9\xbc\xb9\x6d\xc3\x36\xbc\xbd\x57\x1b\x5a\xfa\xe6\x40\x9c\x97\xce\xd9\x17\x07\xe2\xdc\x5f\x8b\x6b\xe7\xfd\xeb\x3f\x01\x00\x00\xff\xff\x80\xfd\x7d\x10\x80\x29\x00\x00")

func v_route_testTxtBytes() ([]byte, error) {
	return bindataRead(
		_v_route_testTxt,
		"v_route_test.txt",
	)
}

func v_route_testTxt() (*asset, error) {
	bytes, err := v_route_testTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v_route_test.txt", size: 10624, mode: os.FileMode(420), modTime: time.Unix(1682225367, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v_tablesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x4b\x6e\x83\x30\x10\x86\xf7\x9c\x62\x64\x65\x59\x27\xa2\x8f\x4d\x64\xbc\xe9\xbe\xea\xa2\x17\x98\xe0\x09\xb8\x35\x76\x64\x1b\x02\x42\xdc\xbd\x82\x10\x0a\xad\xba\xf3\x3c\xbe\x7f\xfe\x19\xf7\x3d\x28\x3a\x6b\x4b\xc0\x72\x67\x23\xd9\xc8\x60\x18\x12\xd1\xf0\x31\x44\x6d\xc9\xcb\x24\x01\x00\x10\x0d\xf7\xee\x0a\xb9\x33\x75\x65\x01\x8d\x2e\x6c\xc6\x72\xb2\x91\x3c\x83\xcf\x3a\x44\x7d\xee\x96\x84\x9c\x90\x19\xcb\x9d\x91\x89\x10\xe0\xd1\x16\x04\x3b\x6d\x15\xb5\x0f\xb0\x8b\x78\x32\x04\xc7\x0c\xf6\x1f\xe3\x2b\x80\x94\x23\xb0\x90\x13\x5d\xa6\xe3\x44\xe7\x33\x56\x78\xea\x40\xa1\xff\x22\xcb\x9f\x18\xe4\x06\x43\xc8\x58\x75\xe2\x2f\x50\x45\xfe\x0c\x4a\x87\x8b\xc1\x8e\xa7\x10\xa9\x8d\xfc\x8f\x91\x45\x52\xcc\xa3\xf7\xaf\x78\x79\x37\xb5\x7f\xc3\x8a\x40\x6e\x1b\xc5\xa1\x4c\x7f\x65\x1a\xae\x30\x22\xbf\xb9\xde\x94\x8e\x25\xa1\x22\x1f\x32\xf6\xa3\xbd\x12\x9e\xab\x6c\xcb\xe8\x48\xd5\x7f\xc4\xb6\xf5\xbe\x69\xcb\x1f\xb7\x05\x29\x0e\x6b\x53\xd3\x8d\xc9\xaa\xf5\x2e\x63\xc7\x74\xfe\x7b\xe0\xdd\x55\x26\xb7\xec\xf2\xbd\x7d\x3f\x61\xc3\xf0\x1d\x00\x00\xff\xff\xed\xe5\x6a\x34\x0d\x02\x00\x00")

func v_tablesTxtBytes() ([]byte, error) {
	return bindataRead(
		_v_tablesTxt,
		"v_tables.txt",
	)
}

func v_tablesTxt() (*asset, error) {
	bytes, err := v_tablesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v_tables.txt", size: 525, mode: os.FileMode(420), modTime: time.Unix(1592492700, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v_tablesVueTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x4f\x6f\x9c\x3c\x10\xc6\xef\x7c\x8a\x47\xbc\x2b\xc5\x28\x88\xcd\x99\xb0\x5c\x72\x7f\xd5\x43\xd4\x4b\xb4\x07\x17\x86\xc5\xaa\xb1\x29\xd8\xc9\x46\xc8\xdf\xbd\xe2\xdf\x06\x02\x8d\xd4\xce\x69\x07\x3f\xf3\xec\x6f\x3c\x03\x5d\x87\x9c\x0a\xa1\x08\xfe\xab\x25\x1f\xce\x79\x48\xda\xac\x11\xb5\x49\x3d\x45\x6f\xf8\x6e\x89\x75\x1e\x00\xe4\x24\x45\x25\x0c\x35\x6d\x8c\x17\xff\xd0\xf9\x21\x7c\xe7\x9f\x43\x1c\x8f\x0d\xfd\xb2\xa2\xa1\x1c\x46\x43\x69\x83\x4c\xab\x42\x8a\xcc\xe0\x4d\x98\x12\x17\x0d\x43\x55\x2d\xb9\x21\xf0\xcc\x08\xad\x16\x5e\x83\x35\xc9\x18\xfe\x7f\xbc\xae\xfd\x70\xc8\x5f\x2d\x19\x51\xbc\xc7\x98\x08\xfa\x84\x05\xe3\x59\xce\x0d\x8f\xc1\x02\x9c\x52\xb0\xce\x4b\x12\x34\x5c\x5d\x08\x07\xa1\x72\xba\x86\x38\x18\xfe\x43\x12\xe2\x13\xa2\xe7\xfe\x57\x8b\x34\xed\xeb\x86\xe2\x3e\x92\x64\xd2\x44\xdf\xa4\x6d\xfe\xe7\x15\x21\x4d\x4b\xe2\xf9\xd8\x99\x37\x69\x26\xd7\x6c\xb6\xcd\xb4\xb4\x95\xea\x7d\xa7\xea\xa7\xe1\xc1\x6c\xbf\x0c\x6f\x99\x74\xde\xe7\x63\x43\x57\x13\xc3\xef\x39\x46\xd3\x68\x82\x98\xba\x5f\xc6\x2b\x97\x96\x46\xb1\xb2\x52\x8a\xe2\xfd\x46\xb2\xd1\xbb\x70\x66\x27\x95\x23\x4d\x6f\x87\xe7\xf0\xeb\xe6\x63\xbc\x9c\x43\x6f\x5b\xa7\xf4\x78\xd9\x0f\xc3\x13\x37\x0d\xa0\xd2\x56\x19\xca\x63\x14\x56\x0d\xd3\x64\xc1\xa2\x49\x53\x8a\x36\x3a\x28\xba\x9a\x67\x91\xfd\x64\xb3\x06\x83\xe8\xef\x87\x75\xb3\x94\x9a\xe7\x1f\xf0\x4f\xbc\x5e\xf0\xb3\xe0\x71\x87\xde\x05\xde\xe2\x56\x2a\x32\xa5\xce\xdb\xf8\x9f\x28\xbe\xfa\x73\xac\xda\xef\x83\x5f\x85\x6e\xa3\x0b\x19\x76\x77\xe4\xb5\x38\xee\xde\xf9\x5d\xb8\x6e\x32\x58\x65\x91\x29\x49\x31\xd6\x50\x5b\x6b\xd5\xd2\xb0\xec\x9d\xb7\xd9\x0e\x51\xe0\xa6\x89\xfa\x59\xe1\x74\x1a\xf6\x04\x9f\x99\xe6\xc8\xb4\x6a\xb5\xa4\x48\xea\x0b\xf3\x95\xde\xdf\x07\x34\x64\x6c\xa3\x28\xf7\x83\x8d\x89\x03\xc9\x96\xf6\x60\xfa\x28\x74\x03\x26\xc9\x40\x9c\xf0\xf0\x08\x81\x04\x2b\xbe\x48\x92\xba\x98\xf2\x11\xe2\xfe\xfe\x4f\x88\xb7\x91\xef\xb2\x45\xb5\x6d\xcb\x75\xd3\x2f\xe2\xbc\xe5\x1c\x58\xb7\x90\x6e\xfd\xc6\x04\x1f\x0a\xb7\xff\x06\xf4\x0b\xbc\x1e\xf1\x68\xe1\x3c\xd7\x6f\xdd\x71\xfe\x56\x76\xdd\x50\xeb\xdc\xef\x00\x00\x00\xff\xff\xf3\x83\xf8\x3c\x52\x05\x00\x00")

func v_tablesVueTxtBytes() ([]byte, error) {
	return bindataRead(
		_v_tablesVueTxt,
		"v_tables.vue.txt",
	)
}

func v_tablesVueTxt() (*asset, error) {
	bytes, err := v_tablesVueTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v_tables.vue.txt", size: 1362, mode: os.FileMode(420), modTime: time.Unix(1591724001, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.txt":          apiTxt,
	"api_test.txt":     api_testTxt,
	"v_api.txt":        v_apiTxt,
	"v_api_test.txt":   v_api_testTxt,
	"v_data.txt":       v_dataTxt,
	"v_readme.txt":     v_readmeTxt,
	"v_route.txt":      v_routeTxt,
	"v_route_test.txt": v_route_testTxt,
	"v_tables.txt":     v_tablesTxt,
	"v_tables.vue.txt": v_tablesVueTxt,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"api.txt":          &bintree{apiTxt, map[string]*bintree{}},
	"api_test.txt":     &bintree{api_testTxt, map[string]*bintree{}},
	"v_api.txt":        &bintree{v_apiTxt, map[string]*bintree{}},
	"v_api_test.txt":   &bintree{v_api_testTxt, map[string]*bintree{}},
	"v_data.txt":       &bintree{v_dataTxt, map[string]*bintree{}},
	"v_readme.txt":     &bintree{v_readmeTxt, map[string]*bintree{}},
	"v_route.txt":      &bintree{v_routeTxt, map[string]*bintree{}},
	"v_route_test.txt": &bintree{v_route_testTxt, map[string]*bintree{}},
	"v_tables.txt":     &bintree{v_tablesTxt, map[string]*bintree{}},
	"v_tables.vue.txt": &bintree{v_tablesVueTxt, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
